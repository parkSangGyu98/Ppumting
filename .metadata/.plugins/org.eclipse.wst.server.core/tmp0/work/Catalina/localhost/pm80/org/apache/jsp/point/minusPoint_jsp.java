/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-08-17 08:17:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.point;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;

public final class minusPoint_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1656316243398L));
    _jspx_dependants.put("/incl/footer.jsp", Long.valueOf(1660719778201L));
    _jspx_dependants.put("jar:file:/C:/NCS/back/ppumting/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pm80/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\" dir=\"ltr\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link rel=\"icon\" type=\"image/png\" sizes=\"32x32\"\r\n");
      out.write("	href=\"../ico/favicon-32x32.png\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\"\r\n");
      out.write("	content=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\r\n");
      out.write("<meta name=\"generator\" content=\"Hugo 0.88.1\">\r\n");
      out.write("<title>HOME | PUMTTING</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap core CSS -->\r\n");
      out.write("<link href=\"../assets/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".bd-placeholder-img {\r\n");
      out.write("	font-size: 1.125rem;\r\n");
      out.write("	text-anchor: middle;\r\n");
      out.write("	-webkit-user-select: none;\r\n");
      out.write("	-moz-user-select: none;\r\n");
      out.write("	user-select: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( min-width : 768px) {\r\n");
      out.write("	.bd-placeholder-img-lg {\r\n");
      out.write("		font-size: 3.5rem;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Custom styles for this template -->\r\n");
      out.write("<link href=\"homecss/carousel.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<div id=\"header\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/incl/banner.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("subtitle", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf(URLEncoder.encode("mod010: Login.jsp", "UTF-8")), request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"container marketing\">\r\n");
      out.write("			<form action=\"minusPoint\" method=\"post\">\r\n");
      out.write("				<!-- Three columns of text below the carousel -->\r\n");
      out.write("				<div class=\"row\" style=\"margin-top: 200px; margin-bottom: 200px;\">\r\n");
      out.write("					<div class=\"col-lg-4\">\r\n");
      out.write("						<img class=\"radius_img\" src=\"../img/radius_img01.jpg\" alt=\"\">\r\n");
      out.write("						<h2>김종국</h2>\r\n");
      out.write("						<p>\"포기란 없다\"</p>\r\n");
      out.write("						<input type=\"radio\" name=\"trainerPrice\" value=\"300000\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.col-lg-4 -->\r\n");
      out.write("					<div class=\"col-lg-4\">\r\n");
      out.write("						<img class=\"radius_img\" src=\"../img/radius_img02.jpg\" alt=\"\">\r\n");
      out.write("						<h2>마동석</h2>\r\n");
      out.write("						<p>\"좋은 몸은 하루아침에 만들어지지 않는다.\"</p>\r\n");
      out.write("						<input type=\"radio\" name=\"trainerPrice\" value=\"200000\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.col-lg-4 -->\r\n");
      out.write("					<div class=\"col-lg-4\">\r\n");
      out.write("						<img class=\"radius_img\" src=\"../img/radius_img03.jpg\" alt=\"\">\r\n");
      out.write("						<h2>양치승</h2>\r\n");
      out.write("						<p>'한계'라고 느낄 때 '한 개'를 더 해야 성장한다.</p>\r\n");
      out.write("						<input type=\"radio\" name=\"trainerPrice\" value=\"400000\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- /.col-lg-4 -->\r\n");
      out.write("					<div class=\"col-lg-4 input\" style=\"margin-left: 420px;\">\r\n");
      out.write("						<input class=\"input-man\" type=\"text\" name=\"month\"\r\n");
      out.write("							placeholder=\"개월 수 입력란  \">\r\n");
      out.write("						<button class=\"button-man\" type=\"submit\">결제하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- /.row -->\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<div id=\"footer\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("<div id=\"copyright\">\r\n");
      out.write("	<footer class=\"container\">\r\n");
      out.write("			<p class=\"float-end\">\r\n");
      out.write("				<a href=\"#\">Back to top</a>\r\n");
      out.write("			</p>\r\n");
      out.write("			<p>\r\n");
      out.write("				&copy; 2017–2021 Company, Inc. &middot; <a href=\"#\">Privacy</a>\r\n");
      out.write("				&middot; <a href=\"#\">Terms</a>\r\n");
      out.write("			</p>\r\n");
      out.write("		</footer>\r\n");
      out.write("</div>");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	<script src=\"../assets/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
